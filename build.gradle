plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.graalvm.buildtools.native' version '0.10.6'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "com.azure:azure-sdk-bom:1.2.18"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'						//jwt start
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'					//jwt end

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-core'


	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' //querydsl start
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" //querydsl end

	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0' //modelmapper

	implementation 'com.azure:azure-storage-blob' // azure blob storage

	implementation 'org.apache.tika:tika-core:2.9.1'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
}


tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
	environment = [
			'BP_NATIVE_IMAGE'                  : 'true',
			'BP_NATIVE_IMAGE_BUILD_ARGUMENTS'  : '''
            --initialize-at-run-time=
            --initialize-at-build-time=ch.qos.logback,org.slf4j
        '''.trim()
	]
}