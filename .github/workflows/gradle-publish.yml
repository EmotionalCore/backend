name: Gradle Package

on:
  workflow_dispatch:

  push:
    branches:
      - main

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image (AMD64)
      run: |
        docker build -t ghcr.io/emotionalcore/my-app:${{ github.sha }}-amd64 .

    - name: Log in to GitHub Container Registry (AMD64)
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker image (AMD64)
      run: |
        docker push ghcr.io/emotionalcore/my-app:${{ github.sha }}-amd64

  build-arm64:
    needs: build-amd64
    runs-on: [self-hosted, ARM64]
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image (ARM64)
      run: |
        docker build -t ghcr.io/emotionalcore/my-app:${{ github.sha }}-arm64 .

    - name: Log in to GitHub Container Registry (ARM64)
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker image (ARM64)
      run: |
        docker push ghcr.io/emotionalcore/my-app:${{ github.sha }}-arm64

  create-manifest-and-deploy:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Create Docker Manifest List
      run: |
        docker manifest create ghcr.io/emotionalcore/my-app:latest \
          ghcr.io/emotionalcore/my-app:${{ github.sha }}-amd64 \
          ghcr.io/emotionalcore/my-app:${{ github.sha }}-arm64

        docker manifest push ghcr.io/emotionalcore/my-app:latest

        docker manifest create ghcr.io/emotionalcore/my-app:${{ github.sha }} \
          ghcr.io/emotionalcore/my-app:${{ github.sha }}-amd64 \
          ghcr.io/emotionalcore/my-app:${{ github.sha }}-arm64
        docker manifest push ghcr.io/emotionalcore/my-app:${{ github.sha }}

    - name: Deploy on Server 
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: ~/deploy.sh
